<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HOMER Silly Insturction</title>
    <url>/2023/06/19/HOMER-Silly-Instruction/</url>
    <content><![CDATA[<h2 id="HOMER-基本功能"><a href="#HOMER-基本功能" class="headerlink" title="HOMER 基本功能"></a>HOMER 基本功能</h2><p>HOMER(Hypergeometric Optimization of Motif EnRichment)用于Motif identification和下一代测序分析，是一款<em>很方便</em>的软件。</p>
<p>*<em>最不方便的地方在于安装… 笔者花了整整两天才部署完，有很多小坑。</em></p>
<h3 id="一-homer在cygwin的安装"><a href="#一-homer在cygwin的安装" class="headerlink" title="一.homer在cygwin的安装"></a>一.homer在cygwin的安装</h3><p>网路上已有很多现成的安装教程资料了.这边仅记录一些在cygwin中安装的问题和解决方法.</p>
<ol>
<li><h4 id="cygwin安装"><a href="#cygwin安装" class="headerlink" title="cygwin安装"></a>cygwin安装</h4><p>下载安装好cygwin, <u>添加至系统环境变量</u>. PATH&#x3D;$PATH:&#x2F;….(安装路径)</p>
<p>注意:安装时添加好<a href="http://mirrors.aliyun.com/cygwin/">http://mirrors.aliyun.com/cygwin/</a> 镜像网站,安装包会快一些.为了正常使用homer, 安装时添加好包:</p>
<ul>
<li><p>gcc</p>
</li>
<li><p>g++</p>
</li>
<li><p>make</p>
</li>
<li><p>perl</p>
</li>
<li><p>zip&#x2F;unzip</p>
</li>
<li><p>gzip&#x2F;gunzip</p>
</li>
<li><p>wget</p>
<p>如果一开始缺了包不要紧, 重新运行cygwin的setup程序添加就可以了, 不是重新安装！</p>
</li>
</ul>
<p>R中装好DESeq2, edgeR (一般生信用过R的都有吧)</p>
</li>
<li><h4 id="问题1"><a href="#问题1" class="headerlink" title="!!!问题1!!!"></a><strong>!!!问题1!!!</strong></h4><p>之后在用homer的时候, 发现没有motif的可视化, 查看log日志发现是缺少了seqlogo, 在python和R中装了也没用, 其实它是包含在weblogo这里的. (在homer官方安装说明中这一段已被设置灰色不再使用,但事实上还是需要使用的). <strong>所以这里还要安装几个依赖</strong>. 如果cygwin中不提供添加, 就用<code>apt-cyg install yourpackacge</code> 和以上一样全都要添加至 ~&#x2F;.bash_profile或者 ~&#x2F;.bashrc中.</p>
<ul>
<li>GMT (自带ghostscript,如果提示没安装就单独再下载一次gs)</li>
<li>ncurses-libs, ncurses-devel, xz-devel, zlib-devel, HTSlib (samtools需要)</li>
<li>samtools <a href="http://sourceforge.net/projects/samtools/files/">http://sourceforge.net/projects/samtools/files/</a> </li>
<li>Weblogo (version 2.8.2, 不要用3 )<a href="http://weblogo.berkeley.edu/">http://weblogo.berkeley.edu/</a>  下载后解压,不需要自己安装。</li>
<li>libpng12, apache2, uuid-dev (R), mysqldb (python)，httpd, hdf5, libuuid-devel (R), MySQL(python)  这边分debian&#x2F;ubuntu 和 CentOS, 这是blat依赖包。我用不着, 要是保险点都装吧。</li>
<li><del>blat</del> 我没有成功安装, 如果不需要处理一些专门的CHIP-seq分析也用不着。</li>
</ul>
</li>
<li><h4 id="下载homer正式安装"><a href="#下载homer正式安装" class="headerlink" title="下载homer正式安装"></a>下载homer正式安装</h4><ul>
<li>homer官网. 下载configureHomer.pl <a href="http://homer.ucsd.edu/homer/configureHomer.pl">http://homer.ucsd.edu/homer/configureHomer.pl</a></li>
<li><code>perl /Users/chucknorris/homer/configureHomer.pl -install</code><br>由于网络问题, 一直没成功. 后来莫名其妙用<code>perl /configureHomer.pl -install homer</code>下载安装好了。</li>
</ul>
</li>
<li><h4 id="安装homer中的package数据库"><a href="#安装homer中的package数据库" class="headerlink" title="安装homer中的package数据库"></a>安装homer中的package数据库</h4><p>这边我用的是人的, 所以就以此举例.</p>
<ul>
<li>人基因组: <code>perl /configureHomer.pl -install hg38</code>  #很大,1.4G</li>
<li>人启动子: <code>perl configureHomer.pl -install human</code></li>
</ul>
<p>如果需要其他的包, 可以用 <code>perl /configureHomer.pl -list</code> 查看有哪些可以安装的.</p>
</li>
</ol>
<h3 id="二-homer的功能和使用"><a href="#二-homer的功能和使用" class="headerlink" title="二.homer的功能和使用"></a>二.homer的功能和使用</h3><h4 id="1-基于基因-x2F-启动子的motif分析"><a href="#1-基于基因-x2F-启动子的motif分析" class="headerlink" title="1.基于基因&#x2F;启动子的motif分析"></a>1.基于基因&#x2F;启动子的motif分析</h4><ol>
<li><h5 id="使用findMotifs-pl"><a href="#使用findMotifs-pl" class="headerlink" title="使用findMotifs.pl"></a>使用<code>findMotifs.pl</code></h5><p>①功能: <strong>寻找目标基因启动子中富集的motif</strong>. e.g.受某处理上调的基因, 特定细胞的基因等等.</p>
<p>②input: 一个你感兴趣的基因列表. 格式包括: </p>
<ul>
<li>NCBI Entrez Gene IDs</li>
<li>NCBI Unigene IDs</li>
<li>NCBI Refseq IDs (mRNA, protein)</li>
<li>Ensembl Gene IDs</li>
<li>Gene Symbols (i.e. Official Gene names, like “Nfkb1” )</li>
<li>popular affymetrix probe IDs (MOE430, U133plus, U95, U75A)</li>
</ul>
<p>③运行命令</p>
<p><code>findMotifs.pl &lt;inputfile.txt&gt; &lt;promoter set&gt; &lt;output directory&gt; [options]</code></p>
<p>&lt;&gt;中的内容是必须的. 其中, <promoter set>在以下种类中选择:</p>
<ul>
<li>human (<em>Homo sapiens</em>)</li>
<li>mouse (<em>Mus musculus</em>)</li>
<li>rat (<em>Rattus norvegicus</em>)</li>
<li>fly (<em>Drosophila melanogaster</em>)</li>
<li>worm (<em>Caenorhabditis elegans</em>)</li>
<li>zebrafish (<em>Danio rerio</em>)</li>
<li>yeast (<em>Saccharomyces cerevisiae</em>)</li>
</ul>
<p>※一个例子:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#目标序列在人类mRNA上富集的motif</span></span><br><span class="line">findMotifs.pl geneslist.txt human-mRNA output/ -rna -len 8</span><br></pre></td></tr></table></figure>

<p>④其他可选参数</p>
<p>请参见 <a href="http://homer.ucsd.edu/homer/microarray/index.html">官方介绍</a> 的<em>Important motif finding parameters</em>部分:</p>
<p>包括规定masked序列, <strong>自定义启动子区域</strong>, 删除冗余启动子, 筛选<strong>motif长度</strong>, motif个数, 只在＋链寻找motif, 寻找oligos富集, <strong>转换至人ID进行GO分析</strong>, 标准化CpG%, 消除lower order oligos带来的bias, 自定义背景基因, 在全局优化中允许的错配, 选择二项式&#x2F;超几何分布打分, CPU核数。</p>
</li>
<li><h5 id="返回找到的每一个motif的位置"><a href="#返回找到的每一个motif的位置" class="headerlink" title="返回找到的每一个motif的位置"></a>返回找到的每一个motif的位置</h5><p>①在<code>findMotifs.pl</code>中这个功能不是默认的.</p>
<p>②input: 基因列表. 格式同上.</p>
<p>③使用: 加上 <code>-find &lt;motif file&gt;</code>参数. 这个文件(.motif)在初始的分析中可以得到。</p>
<p>※一个例子:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#目标序列在人类mRNA上富集的motif</span></span><br><span class="line">findMotifs.pl geneslist.txt human output/  -find motifs.motif &gt;  output.txt</span><br></pre></td></tr></table></figure>

<p>③运行结果&#x2F;输出内容:</p>
<ol>
<li>Peak&#x2F;Region ID</li>
<li>Offset from the TSS</li>
<li>Sequence of the site</li>
<li>Name of the Motif</li>
<li>Strand</li>
<li>Motif Score (log odds score of the motif matrix, higher scores are better matches)</li>
</ol>
</li>
<li><h5 id="使用annotatePeaks-pl"><a href="#使用annotatePeaks-pl" class="headerlink" title="使用annotatePeaks.pl"></a>使用<code>annotatePeaks.pl</code></h5><p>①功能: 注释peaks, 及附近基因, GO分析, 量化ChIP-Seq tags密度, 绘制图.</p>
<p>②input: HOMER peaks file, 或者BED file. 具体见这一段说明：</p>
<blockquote>
<p>HOMER peak files should have at minimum <u>5 columns</u> (separated by TABs, additional columns will be ignored):</p>
<ul>
<li>Column1: Unique Peak ID</li>
<li>Column2: chromosome</li>
<li>Column3: starting position</li>
<li>Column4: ending position</li>
<li>Column5: Strand (+&#x2F;- or 0&#x2F;1, where 0&#x3D;”+”, 1&#x3D;”-“)</li>
</ul>
<p>BED files should have at minimum <u>6 columns</u> (separated by TABs, additional columns will be ignored)</p>
<ul>
<li>Column1: chromosome</li>
<li>Column2: starting position</li>
<li>Column3: ending position</li>
<li>Column4: Unique Peak ID</li>
<li>Column5: not used</li>
<li>Column6: Strand (+&#x2F;- or 0&#x2F;1, where 0&#x3D;”+”, 1&#x3D;”-“)</li>
</ul>
<p>In theory, HOMER will accept BED files with only 4 columns (+&#x2F;- in the 4th column), and files without unique IDs, but this is NOT recommended. For one, if you don’t have unique IDs for your regions, it’s hard to go back and figure out which region contains which peak.</p>
<p>※mac中可以用homer的<code>changeNewLine.pl &lt;filename&gt;</code>转换文件格式。</p>
</blockquote>
<p>③使用：</p>
<p><code>annotatePeaks.pl &lt;peak/BED file&gt; &lt;genome&gt; [options] &gt; &lt;output file&gt;</code></p>
<p><code>annotatePeaks.pl tss &lt;promoter set&gt; -m &lt;motif file&gt; &lt;output directory&gt;</code></p>
<p>※例子:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#i.基本的注释Genomic Annotation</span></span><br><span class="line">annotatePeaks.pl peaks.txt hg38 &gt; output.txt</span><br><span class="line"><span class="comment">#ii.在TSS而非峰模式下分析转录起始位点</span></span><br><span class="line">annotatePeaks.pl tss hg38 -size -300,50 -m motifs.motif &gt; output.txt</span><br><span class="line"><span class="comment">#iii.在peaks附近寻找motif</span></span><br><span class="line">annotatePeaks.pl peaks.txt mm8 -size 200 -m ms1.motif [cebp.motif] &gt; output.txt</span><br><span class="line"><span class="comment">#iii加上-mbed motif.bed 可以生成bed文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#iv.在peaks1中找到最近的peaks2 ???不是很清楚使用实例???</span></span><br><span class="line">... -p &lt;peak file 1&gt; [peak file 2] [-pdist] [-pcount] [-size]</span><br></pre></td></tr></table></figure>

<p>④输出结果</p>
<p>包括: 峰值是否在TSS (default -1kb ~ +100bp), TTS(default -100 bp to +1kb), CDS Exons, 5’ UTR Exons, 3’ UTR Exons, Introns, Intergenic, *CpG Islands,  *Repeats ( *在Detailed Annotation选项中)</p>
<blockquote>
<ol>
<li>Peak ID</li>
<li>Chromosome</li>
<li>Peak start position</li>
<li>Peak end position</li>
<li>Strand</li>
<li>Peak Score</li>
<li>FDR&#x2F;Peak Focus Ratio&#x2F;Region Size</li>
<li>Annotation (i.e. Exon, Intron, …)</li>
<li>Detailed Annotation (Exon, Intron etc. + CpG Islands, repeats, etc.)</li>
<li>Distance to nearest RefSeq TSS</li>
<li>Nearest TSS: Native ID of annotation file</li>
<li>Nearest TSS: Entrez Gene ID</li>
<li>Nearest TSS: Unigene ID</li>
<li>Nearest TSS: RefSeq ID</li>
<li>Nearest TSS: Ensembl ID</li>
<li>Nearest TSS: Gene Symbol</li>
<li>Nearest TSS: Gene Aliases</li>
<li>Nearest TSS: Gene description</li>
<li>Additional columns depend on options selected when running the program.</li>
</ol>
</blockquote>
<p>⑤可选参数</p>
<ul>
<li><p><code>annotation.pl &lt;peak file&gt; &lt;genome&gt; -gene &lt;gene data file&gt;  &gt; output.txt</code></p>
<p>根据peaks最近的注释TSS, <strong>向peaks添加<u>特定基因</u>的信息</strong>。</p>
</li>
<li><p>有关diagram plot 详见: <a href="http://homer.ucsd.edu/homer/ngs/quantification.html">ann可视化</a></p>
<p>※一些例子. 用excel打开, 作图 (除了热图)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">###scatter</span></span><br><span class="line"><span class="comment">#me1和me3在小鼠胚胎干细胞峰peaks附近的分布 *log--&gt; -log2</span></span><br><span class="line">annotatePeaks.pl peaks.txt mm8 -size 1000 -d H3K4me1-ChIP-Seq/ H3K4me3-ChIP-Seq/ &gt; output.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">###hist</span></span><br><span class="line"><span class="comment">#TSS相关的Motif YY1的分布</span></span><br><span class="line">annotatePeaks.pl tss mm9 -size -500,250 -hist 10 -m yy1.motif &gt; output.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">###positions ???目录下的tags是什么类型的文件??? 5‘tag</span></span><br><span class="line"><span class="comment">#motifs near peaks</span></span><br><span class="line">annotatePeaks.pl peaks.txt hg18 -size 6000 -hist 25 -m &lt;are.motif&gt; [fox.motif ap1.motif]</span><br><span class="line"><span class="comment">#genes/tags near peaks</span></span><br><span class="line">annotatePeaks.pl &lt;peak file&gt; &lt;genome&gt; -size &lt;<span class="comment">#&gt; -hist &lt;#&gt; -d &lt;tag directory 1&gt; [tag directory2] ... -m &lt;motif 1&gt; &lt;motif 2&gt; ... &gt;  &lt;output matrix file&gt;</span></span><br><span class="line">annotatePeaks.pl peaks.txt hg18 -size 6000 -hist 25 -d me1/ me2/ Mme3/ &gt; output.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">###heatmap --&gt; matrix --&gt; visualized with other software</span></span><br><span class="line">annotatePeaks.pl &lt;peak file&gt; &lt;genome&gt; -size &lt;..&gt; -hist &lt;..&gt; -ghist -d &lt;tag directory 1&gt; [tag directory2] ... &gt; &lt;output matrix file&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>TSS相关的Motif YY1的分布例图:</p>
<p><img src="S:\BlogProject\blog\source_posts\HOMER-Silly-Tutorials_pics\motifs.tssHistogram.png" alt="Motif TSS histogram YY1"></p>
</li>
</ol>
<h4 id="2-基于基因组的分析"><a href="#2-基于基因组的分析" class="headerlink" title="2.基于基因组的分析"></a>2.基于基因组的分析</h4><ol>
<li><h5 id="在基因组区域中寻找富集的motif"><a href="#在基因组区域中寻找富集的motif" class="headerlink" title="在基因组区域中寻找富集的motif"></a>在基因组区域中寻找富集的motif</h5><p>①input: HOMER peak file, BED file, 具体格式见前文引用。</p>
<p>②使用:</p>
<p><code>findMotifsGenome.pl &lt;peak/BED file&gt; &lt;genome&gt; &lt;output directory&gt; -size # [options]</code></p>
<p>③输出结果:</p>
<ul>
<li><p>homerMotifs.motifs&lt;#&gt; :从头搜寻的motif, 信息有长度, 算法单独运行</p>
</li>
<li><p>homerMotifs.all.motifs : 全部的motifs</p>
</li>
<li><p>motifFindingParameters.txt : 键入的命令</p>
</li>
<li><p>knownResults.txt : 统计数据, 可在excel打开</p>
</li>
<li><p>seq.autonorm.tsv : lower-order oligo的自动标准化</p>
</li>
<li><p>homerResults.html : 从头搜寻motif的格式化</p>
</li>
<li><p>homerResults&#x2F; 上面的内容</p>
</li>
<li><p>knownResults.html: 已知的motif输出</p>
</li>
<li><p>knownResults&#x2F; 上面的内容</p>
</li>
</ul>
<p>④可选参数详见:  <a href="http://homer.ucsd.edu/homer/ngs/peakMotifs.html">findMotifsGenome</a></p>
<ul>
<li><p>背景, motif长度, 用于motif搜寻的区域长度, 不搜索de novo的motif, 等等</p>
</li>
<li><p>重要的一个: <strong>-rna</strong> 用RNA数据, 输出mRNA motifs, 关于没有其他RNA数据库, 作者写了一句很可爱的话:</p>
<blockquote>
<p> I guess chuck roundhouse kicked all of the splicing and other RNA motifs into hard to find databases.</p>
</blockquote>
</li>
</ul>
</li>
<li><h5 id="寻找具体motif的位置"><a href="#寻找具体motif的位置" class="headerlink" title="寻找具体motif的位置"></a>寻找具体motif的位置</h5><p>①在<code>findMotifsGenome.pl</code>中这个功能也不是默认的.</p>
<p>②input： 从使用homer得到筛选你感兴趣的motifs之后, 使用 <code>-find &lt;motifile&gt;</code></p>
<p>③使用:</p>
<p>i.<code>findMotifsGenome.pl &lt;peaks.txt/bed&gt; &lt;genome&gt; /out -find &lt;motif file&gt; /output.txt</code></p>
<p>ii.<code>annotatePeaks.pl  &lt;peaks&gt; &lt;genome&gt; -m motifs.motif &gt; output.txt</code></p>
<p>④输出结果</p>
<p>在i中:</p>
<blockquote>
<ol>
<li>Peak&#x2F;Region ID</li>
<li>Offset from the center of the region</li>
<li>Sequence of the site</li>
<li>Name of the Motif</li>
<li>Strand</li>
<li>Motif Score (log odds score of the motif matrix, higher scores are better matches)</li>
</ol>
</blockquote>
<p>在ii中:</p>
<blockquote>
<ol>
<li>Peak&#x2F;Region ID</li>
<li>Chromosome</li>
<li>Start</li>
<li>End</li>
<li>Strand of Peaks</li>
</ol>
<p>  6-18: annotation information</p>
<ol start="19">
<li>CpG%</li>
<li>GC%</li>
<li>Motif Instances<br>  …</li>
</ol>
</blockquote>
<p>⑤可视化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#motif密度 -hist &lt;..&gt;</span></span><br><span class="line"></span><br><span class="line">annotatePeaks.pl peaks.txt hg38 -m m1.motif m2.motif -size 1000 -hist 10 &gt; output.txt</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="3-在整个基因组中寻找motif"><a href="#3-在整个基因组中寻找motif" class="headerlink" title="3.在整个基因组中寻找motif"></a>3.在整个基因组中寻找motif</h4><ol>
<li><h5 id="使用-scanMotifGenomeWide-pl"><a href="#使用-scanMotifGenomeWide-pl" class="headerlink" title="使用 scanMotifGenomeWide.pl"></a>使用 <code>scanMotifGenomeWide.pl</code></h5><p>①input: motif file</p>
<p>②使用: </p>
<p><code>scanMotifGenomeWide.pl &lt;motif file&gt; &lt;genome&gt; [options]</code></p>
<p>※一个例子:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#输出为bed, 默认txt</span></span><br><span class="line">scanMotifGenomeWide.pl pu1.motif mm9 -bed &gt; pu1.sites.mm9.bed</span><br></pre></td></tr></table></figure>

<p>③输出结果:</p>
<blockquote>
<p>Tab delimited text file (default):</p>
<ol>
<li>Site ID (motif name + number)</li>
<li>chr</li>
<li>start</li>
<li>end</li>
<li>strand</li>
<li>log-odds score</li>
<li>sequence</li>
</ol>
<p>BED (tab) format (use <strong>-bed</strong>):</p>
<ol>
<li>chr</li>
<li>start</li>
<li>end</li>
<li>motif name</li>
<li>log-odds score (will be floored to an integer)</li>
<li>strand</li>
</ol>
</blockquote>
<p>④可选参数详见<a href="http://homer.ucsd.edu/homer/motif/genomeWideMotifScan.html">genenomeWide</a></p>
</li>
</ol>
<h4 id="4-在mRNA中找出RNA-motif"><a href="#4-在mRNA中找出RNA-motif" class="headerlink" title="4.在mRNA中找出RNA motif"></a>4.在mRNA中找出RNA motif</h4><p>基本的使用:在2.1已经提到了, 在<code>findMotifs.pl</code>和<code> and findMotifsGenome.pl</code>中加入<code>-rna</code>即可.</p>
<ol>
<li><h5 id="寻找RNA-motifs的Co-regulated基因列表"><a href="#寻找RNA-motifs的Co-regulated基因列表" class="headerlink" title="寻找RNA motifs的Co-regulated基因列表"></a>寻找RNA motifs的Co-regulated基因列表</h5><p>①使用</p>
<p>※一个例子</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">findMotifs.pl mdownregulated.genes.txt human-mRNA Output/ -rna -len 8</span><br></pre></td></tr></table></figure>

<p>其实规定了human-mRNA就不用再加<code>-rna</code>了。</p>
<p>现在也尝试match人类的miRNA seeds (miRBase)</p>
<p>②可选参数</p>
<p>在<code>findMotifs.pl</code>中可以添加:</p>
<ul>
<li>-min &lt;#&gt;:要考虑的最小mRNA长度 (移除极短的mRNA序列)</li>
<li>-max &lt;#&gt;:要考虑的最大mRNA长度 (删除非常长的RNA)</li>
</ul>
</li>
<li><h5 id="分析motif-链特异性的genome区域"><a href="#分析motif-链特异性的genome区域" class="headerlink" title="分析motif 链特异性的genome区域"></a>分析motif 链特异性的genome区域</h5><p><code>findMotifsGenome.pl fox2.clip.bed hg17 MotifOutput -rna</code></p>
</li>
</ol>
]]></content>
      <tags>
        <tag>test</tag>
        <tag>BIOINFO</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客搭建</title>
    <url>/2023/07/17/hexoGuide/</url>
    <content><![CDATA[<h2 id="HEXO-博客搭建指北"><a href="#HEXO-博客搭建指北" class="headerlink" title="HEXO 博客搭建指北"></a>HEXO 博客搭建指北</h2><blockquote>
<p>想继续建设的时候发现完全忘记怎么弄了… </p>
</blockquote>
<h3 id="0-将Blog依托于Github"><a href="#0-将Blog依托于Github" class="headerlink" title="0.将Blog依托于Github"></a>0.将Blog依托于Github</h3><ol>
<li><p>设置一个github repository, 名字修改为 {your_id}.github.io</p>
</li>
<li><p>在文件夹下右键 Git Bash Here:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>

<p>再生成ssh密钥文件:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>

<p>回车x3 (不设置密码)</p>
</li>
<li><p>在用户文件夹下(Users&#x2F;Name&#x2F;)找到.ssh文件夹, 复制id_rsa.pub密钥</p>
</li>
<li><p><a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 新建new SSH Key, 密钥粘贴添加.</p>
</li>
<li><p>在Git Bash中检测公钥设置:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>
</blockquote>
</li>
<li><p>进入根目录&#x2F;.config.yml (站点配置文件), 修改字段:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:rezinghost/rezinghost.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>
</li>
<li><p>部署插件, 上传.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
</li>
<li><p>*绑定域名</p>
<ul>
<li>登录到阿里云，进入管理控制台的域名列表，找到你的个性化域名，进入解析.</li>
</ul>
<p><img src="S:\BlogProject\blog\source_posts\hexoGuide\v2-47323ad4490e206aef93a3d68f0670b6_720w.webp" alt="img"></p>
<ul>
<li><p>添加解析<br>包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 <a href="http://xxxx.github.io/">http://xxxx.github.io</a> 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.<a href="http://github.io/">http://github.io</a> 这里千万别弄错了。第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名</p>
<p><img src="S:\BlogProject\blog\source_posts\hexoGuide\v2-85ba6dda906f22dea4c03df2b47d994b_720w.jpeg" alt="img"><img src="S:\BlogProject\blog\source_posts\hexoGuide\v2-40222b3a295bb692aac22829a8ec3be2_720w.webp" alt="img"></p>
</li>
<li><p>点击save保存。第三步，进入本地博客文件夹 ，进入blog&#x2F;source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www(不建议带有www):</p>
<p><img src="S:\BlogProject\blog\source_posts\hexoGuide\v2-79abfff91af3f520e24cb91acf6aa994_720w.jpeg" alt="img"></p>
<p>保存，命名为CNAME ，注意保存成<strong>所有文件</strong>而不是<strong>txt文件</strong>。</p>
<p>完成这三步，进入blog目录中，按住shift键右击打开命令行，依次输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。</p>
</li>
</ul>
</li>
</ol>
<h3 id="1-依赖安装"><a href="#1-依赖安装" class="headerlink" title="1.依赖安装"></a>1.依赖安装</h3><p>Hexo基于Node.js (包含npm)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v #检测</span><br></pre></td></tr></table></figure>

<p>新建的blog根文件夹中打开cmd, 用npm安装Hexo:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure>



<h3 id="2-初始化-生成动态"><a href="#2-初始化-生成动态" class="headerlink" title="2.初始化, 生成动态"></a>2.初始化, 生成动态</h3><p>初始化博客:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p>三个常用命令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g #generate</span><br><span class="line"></span><br><span class="line">hexo s #server预览</span><br><span class="line"></span><br><span class="line">hexo d #deploy</span><br></pre></td></tr></table></figure>



<h3 id="3-Blog基本建设"><a href="#3-Blog基本建设" class="headerlink" title="3.Blog基本建设"></a>3.Blog基本建设</h3><h4 id="1-主题"><a href="#1-主题" class="headerlink" title="1.主题"></a>1.主题</h4><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p>
<p>每一个主题有添加说明.例如:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置了&quot;next&quot;主题, 在根目录的themes/next下</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>然后打开站点配置文件_config.yml, 修改字段 <code>theme: next</code></p>
<p>一般来说,主页上各个子页面都是要设置主题的配置文件(根目录&#x2F;themes&#x2F;_config.yml) 进行设置</p>
<h4 id="2-头像-背景设置"><a href="#2-头像-背景设置" class="headerlink" title="2.头像,背景设置"></a>2.头像,背景设置</h4><p>打开主题配置文件, 修改图片目录.</p>
<p>我们的图片放在根目录的source&#x2F;images中即可显示.</p>
<h4 id="3-发布新页面和文章"><a href="#3-发布新页面和文章" class="headerlink" title="3.发布新页面和文章"></a>3.发布新页面和文章</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;菜单项名称&quot;（Menu中要匹配） #根目录source中可找到</span><br><span class="line">hexo n &quot;博客名字&quot;</span><br></pre></td></tr></table></figure>



<h4 id="4-隐藏文章"><a href="#4-隐藏文章" class="headerlink" title="4.隐藏文章"></a>4.隐藏文章</h4><p>在站点配置_config.yml加入:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-hide-posts</span></span><br><span class="line"><span class="attr">hide_posts:</span></span><br><span class="line">  <span class="comment"># 可以改成其他你喜欢的名字</span></span><br><span class="line">  <span class="attr">filter:</span> <span class="string">hidden</span> </span><br><span class="line">  <span class="comment"># 指定你想要传递隐藏文章的位置，比如让所有隐藏文章在存档页面可见</span></span><br><span class="line">  <span class="comment"># 常见的位置有：index, tag, category, archive, sitemap, feed, etc.</span></span><br><span class="line">  <span class="comment"># 留空则默认全部隐藏</span></span><br><span class="line">  <span class="attr">public_generators:</span> []</span><br><span class="line">  <span class="comment"># 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span></span><br><span class="line">  <span class="attr">noindex:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>在文章的属性中定义 <code>hidden: true</code> 即可隐藏文章。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#x27;Hidden Post&#x27;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&#x27;2021/03/05 21:45:14&#x27;</span></span><br><span class="line"><span class="attr">hidden:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>命令行<code>hexo hidden:list</code>可获取所有隐藏文章列表.</p>
<h4 id="5-添加作者"><a href="#5-添加作者" class="headerlink" title="5.添加作者"></a>5.添加作者</h4><ol>
<li><p>you can add author in<code>theme/next/ layout／post.swig</code> before <code>&#123;% if post.comments %&#125;</code></p>
</li>
<li><p>add<code>&lt;span&gt; ｜ &lt;/span&gt;&lt;span class=&quot;fa fa-user-o&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;color:#222;&quot;&gt; &#123;&#123; post.author &#125;&#125;&lt;/span&gt; </code></p>
</li>
<li><p>and than add ‘author: xx’ in title of<code>source/_posts/xx.md</code><br>like this</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">add</span> <span class="string">author</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2001-08-25</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">author</span> <span class="string">name</span></span><br><span class="line"><span class="attr">category:</span> <span class="string">add</span> <span class="string">author</span></span><br><span class="line"><span class="attr">tag:</span> <span class="string">next</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="6-超链接"><a href="#6-超链接" class="headerlink" title="6.超链接"></a>6.超链接</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% post_link firstPart.md &#123;Title e.b. 第一部分&#125; %&#125;</span><br></pre></td></tr></table></figure>





<p>***千万不要在hexo post的md文档中直接加入<code>&#123;% xx xxxxx %&#125;</code>的, 这是hexo内置超链接!!</p>
<p><img src="S:\BlogProject\blog\source_posts\hexoGuide\image-20230717164817792.png" alt="image-20230717164817792"></p>
<h3 id="1-博客展示"><a href="#1-博客展示" class="headerlink" title="-1.博客展示"></a>-1.博客展示</h3><p><a href="https://link.zhihu.com/?target=http://jmyblog.top/">…Miss.j BlogDiary…</a></p>
<p><a href="https://link.zhihu.com/?target=http://ibb.chaodamiao.com/">RILWEIC</a></p>
<p><a href="https://link.zhihu.com/?target=http://blog.sunxinfei.com/">Xin’s Notes</a></p>
<p><a href="https://link.zhihu.com/?target=https://guguant.github.io/">飞鸟与鱼</a></p>
<p><a href="https://link.zhihu.com/?target=http://www.fuck-goods.tk/">无名博客</a></p>
<p><a href="https://link.zhihu.com/?target=http://helloqa.com/">iTesting软件测试知识分享</a></p>
<p><a href="https://link.zhihu.com/?target=http://bolg.upsky.top/">赵小源的个人博客</a></p>
<p><a href="https://link.zhihu.com/?target=http://www.huajiayi.top/">华嘉熠’s Blog</a></p>
<p><a href="https://link.zhihu.com/?target=http://asmire.site/">Cocoon</a></p>
<p><a href="https://link.zhihu.com/?target=https://luoshaoxiong.github.io/">罗少雄’s Blog</a></p>
<p><a href="https://link.zhihu.com/?target=https://lruihao.github.io/">李四啊_</a></p>
<p><strong>其他优秀个人博客展示：</strong></p>
<p><a href="https://link.zhihu.com/?target=https://www.dandyweng.com/">翁天信 · Dandy Weng</a> <a href="https://link.zhihu.com/?target=http://chaoxuprime.com/">chaoxuprim</a> <a href="https://link.zhihu.com/?target=http://kenjiendo.com/">KENJI ENDO</a> <a href="https://link.zhihu.com/?target=http://shenzekun.cn/">Moorez</a> <a href="https://link.zhihu.com/?target=https://codesky.me/">CodeSky 代码之空</a> <a href="https://link.zhihu.com/?target=http://www.helloshawn.cn/">大江东去</a> <a href="https://link.zhihu.com/?target=http://iconmoon.com/">UI Design Portfolio of JJ Ying</a> <a href="https://link.zhihu.com/?target=http://www.jeyzhang.com/">JeyZhang</a> <a href="https://link.zhihu.com/?target=http://blog.lightina.cn/">jacklightChen | 得到的都是侥幸</a> <a href="https://link.zhihu.com/?target=https://qingpei.me/">edwardtoday</a> <a href="https://link.zhihu.com/?target=http://rafaltomal.com/">Rafal Tomal - Web Designer and Genesis Developer</a> <a href="https://link.zhihu.com/?target=http://strml.net/">Projects and Work</a> <a href="https://link.zhihu.com/?target=http://miaoxiaoer.com/">绘画爱好者</a> <a href="https://link.zhihu.com/?target=http://ursocute.github.io/">万世奇的博客</a> [Guillermo Rauch](</p>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2023/06/19/test/</url>
    <content><![CDATA[<p><a href="2023/06/19/web">web</a></p>
<p><img src="S:\BlogProject\blog\source_posts\test\1.png" alt="1"></p>
<a href="/2023/06/19/NAS-Guide/" title="NAS Guide">NAS Guide</a>

<a href="/2023/06/19/hpc/" title="北极星自动登陆脚本">北极星脚本</a>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>实验室网站管理</title>
    <url>/2023/06/19/web/</url>
    <content><![CDATA[<a href="/2023/06/19/web_guide/" title="home新闻和会议告示">首页</a>

<a href="/2023/06/19/web_paper/" title="添加发表文章">文章</a>

<a href="/2023/06/19/web_member/" title="实验室成员编辑">实验室成员</a>

]]></content>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
</search>
